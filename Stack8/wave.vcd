$date
	Wed Oct 30 20:00:57 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 8 ! z [0:7] $end
$var reg 1 " clk $end
$var reg 1 # x $end
$scope module stk $end
$var wire 1 " clk $end
$var wire 1 # x $end
$var wire 8 $ z [0:7] $end
$var wire 8 % sg_rg [0:7] $end
$var wire 8 & rg_om [0:7] $end
$scope module om $end
$var wire 8 ' z [0:7] $end
$var wire 8 ( s [0:7] $end
$upscope $end
$scope module r01 $end
$var wire 1 " clk $end
$var wire 1 ) enable $end
$var wire 8 * inreg [0:7] $end
$var reg 8 + outreg [0:7] $end
$upscope $end
$scope module sg $end
$var wire 8 , s [0:7] $end
$var wire 1 # x $end
$var wire 8 - new_s [0:7] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 -
b0 ,
b0 +
b0 *
1)
b0 (
b0 '
b0 &
b0 %
b0 $
0#
0"
b0 !
$end
#3
b1 %
b1 *
b1 -
1#
#4
b11 %
b11 *
b11 -
b1 !
b1 $
b1 '
b1 &
b1 (
b1 +
b1 ,
1"
#6
0"
#10
b111 %
b111 *
b111 -
b11 !
b11 $
b11 '
b11 &
b11 (
b11 +
b11 ,
1"
#12
0"
#16
b1111 %
b1111 *
b1111 -
b111 !
b111 $
b111 '
b111 &
b111 (
b111 +
b111 ,
1"
#18
0"
#21
b11 %
b11 *
b11 -
0#
#22
b1 %
b1 *
b1 -
b11 !
b11 $
b11 '
b11 &
b11 (
b11 +
b11 ,
1"
#24
0"
#28
b0 %
b0 *
b0 -
b1 !
b1 $
b1 '
b1 &
b1 (
b1 +
b1 ,
1"
#30
0"
#34
b0 !
b0 $
b0 '
b0 &
b0 (
b0 +
b0 ,
1"
#36
0"
#39
b1 %
b1 *
b1 -
1#
#40
b11 %
b11 *
b11 -
b1 !
b1 $
b1 '
b1 &
b1 (
b1 +
b1 ,
1"
#42
0"
#46
b111 %
b111 *
b111 -
b11 !
b11 $
b11 '
b11 &
b11 (
b11 +
b11 ,
1"
#48
0"
#49
