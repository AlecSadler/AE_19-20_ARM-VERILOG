$date
	Mon Oct 21 12:58:50 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 1 ! z $end
$var reg 1 " clk $end
$var reg 2 # x [1:2] $end
$scope module m1 $end
$var wire 1 " clk $end
$var wire 2 $ x [1:2] $end
$var wire 1 ! z $end
$var wire 2 % sigma_regi [1:2] $end
$var wire 2 & regi_omega [1:2] $end
$scope module om $end
$var wire 1 ! z $end
$var wire 2 ' st [1:2] $end
$upscope $end
$scope module reg01 $end
$var wire 1 " clk $end
$var wire 1 ( en $end
$var wire 2 ) inreg [1:2] $end
$var reg 2 * outreg [1:2] $end
$upscope $end
$scope module sg $end
$var wire 2 + st [1:2] $end
$var wire 2 , x [1:2] $end
$var wire 2 - new_s [1:2] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1 -
b1 ,
b0 +
b0 *
b1 )
1(
b0 '
b0 &
b1 %
b1 $
b1 #
0"
0!
$end
#3
b1 &
b1 '
b1 *
b1 +
1"
#4
0"
#5
b10 %
b10 )
b10 -
b10 #
b10 $
b10 ,
#7
b0 %
b0 )
b0 -
b10 &
b10 '
b10 *
b10 +
1"
#8
0"
#9
b11 %
b11 )
b11 -
b11 #
b11 $
b11 ,
#11
b0 %
b0 )
b0 -
1!
b11 &
b11 '
b11 *
b11 +
1"
#12
0"
#13
b1 %
b1 )
b1 -
b1 #
b1 $
b1 ,
#15
0!
b1 &
b1 '
b1 *
b1 +
1"
#16
0"
#19
1"
#20
0"
#23
1"
#24
0"
#27
1"
#28
0"
#31
1"
#32
0"
#33
